homeassistant:
  customize:
    package.node_anchors:
      counters: &counters
        entity_id: &counterIDs
          - counter.stue
          - counter.spisestue
          - counter.kokken
          - counter.sovevaerelse
          - counter.badevaerelse
          - counter.gang
          - counter.noop

      lights: &lights
        entity_id:
          - light.grp_stue
          - light.grp_spisestue
          - light.grp_kokken
          - light.grp_sovevaerelse
          - light.grp_badevaerelse
          - light.grp_gang

      switches: &switches
        entity_id:
          - switch.circadian_lighting_stue
          - switch.circadian_lighting_spisestue
          - switch.circadian_lighting_kokken
          - switch.circadian_lighting_sovevaerelse
          - switch.circadian_lighting_badevaerelse
          - switch.circadian_lighting_gang

      booleans: &booleans
        entity_id:
          - input_boolean.disableincrement
          - input_boolean.disableincrementstue
          - input_boolean.disableincrementspisestue
          - input_boolean.disableincrementkokken
          - input_boolean.disableincrementsovevaerelse
          - input_boolean.disableincrementbadevaerelse
          - input_boolean.disableincrementgang

automation:
  - id: hass_startup
    alias: 'Hass startup'
    trigger:
    - platform: homeassistant
      event: start
    action:
    # Ensure that the Circadian Lights are enabled after rebooting HASS
    - service: switch.turn_on
      data: *switches
    # Ensure that all counters are reset after rebooting HASS
    - service: counter.reset
      data: *counters
    # Ensure that the Disable Increment booleans are turned off after rebooting HASS
    - service: input_boolean.turn_off
      data: *booleans

  - alias: 'resetLightToggleCounter'
    # Reset the counter every 10 seconds
    initial_state: "on"
    trigger:
      - platform: numeric_state
        entity_id: *counterIDs
        above: 0
        for: "00:00:10"
    action:
    - service: counter.reset
      data: *counters

  - alias: "incrementCounter"
    # Increment the light counter if a light switches from off to on IF the boolean "disableincrement" == "off"
    initial_state: "on"
    trigger:
    - platform: state
      <<: *lights
      from: "off"
      to: "on"
    condition:
    - condition: state
      entity_id: input_boolean.disableincrement
      state: "off"
    action:
    - service: counter.increment
      data_template:
        entity_id: >
          {% if trigger.entity_id == 'light.grp_stue' %}
            counter.stue
          {% elif trigger.entity_id == 'light.grp_spisestue' %}
            counter.spisestue
          {% elif trigger.entity_id == 'light.grp_badevaerelse' %}
            counter.badevaerelse
          {% elif trigger.entity_id == 'light.grp_gang' %}
            counter.gang
          {% elif trigger.entity_id == 'light.grp_kokken' %}
            counter.kokken
          {% elif trigger.entity_id == 'light.grp_sovevaerelse' %}
            counter.sovevaerelse
          {% else %}
            counter.noop
          {% endif %}

  - alias: "Stue: Toggle Manual Override"
    # Enable manual override of Circadian lights IF counter > 2:
    initial_state: "on"
    use_blueprint:
      path: circadianLightning/toggle.yaml
      input:
        toggles: 2
        disableincrementboolean: input_boolean.disableincrementstue
        counter: counter.stue
        circardianswitch: switch.circadian_lighting_stue
        lights: light.grp_hele_stue

  - alias: "Spisestue: Toggle Manual Override"
    # Enable manual override of Circadian lights IF counter > 2:
    initial_state: "on"
    use_blueprint:
      path: circadianLightning/toggle.yaml
      input:
        toggles: 2
        disableincrementboolean: input_boolean.disableincrementspisestue
        counter: counter.spisestue
        circardianswitch: switch.circadian_lighting_spisestue
        lights: light.grp_spisestue

  - alias: "Køkken: Toggle Manual Override"
    # Enable manual override of Circadian lights IF counter > 2:
    initial_state: "on"
    use_blueprint:
      path: circadianLightning/toggle.yaml
      input:
        toggles: 2
        disableincrementboolean: input_boolean.disableincrementkokken
        counter: counter.kokken
        circardianswitch: switch.circadian_lighting_kokken
        lights: light.grp_kokken

  - alias: "Soveværelse: Toggle Manual Override"
    # Enable manual override of Circadian lights IF counter > 2:
    initial_state: "on"
    use_blueprint:
      path: circadianLightning/toggle.yaml
      input:
        toggles: 2
        disableincrementboolean: input_boolean.disableincrementsovevaerelse
        counter: counter.sovevaerelse
        circardianswitch: switch.circadian_lighting_sovevaerelse
        lights: light.sovevaerelse

  - alias: "Badeværelse: Toggle Manual Override"
    # Enable manual override of Circadian lights IF counter > 2:
    initial_state: "on"
    use_blueprint:
      path: circadianLightning/toggle.yaml
      input:
        toggles: 2
        disableincrementboolean: input_boolean.disableincrementbadevaerelse
        counter: counter.badevaerelse
        circardianswitch: switch.circadian_lighting_badevaerelse
        lights: light.grp_badevaerelse

  - alias: "Gang: Toggle Manual Override"
    # Enable manual override of Circadian lights IF counter > 2:
    initial_state: "on"
    use_blueprint:
      path: circadianLightning/toggle.yaml
      input:
        toggles: 2
        disableincrementboolean: input_boolean.disableincrementgang
        counter: counter.gang
        circardianswitch: switch.circadian_lighting_gang
        lights: light.grp_gang