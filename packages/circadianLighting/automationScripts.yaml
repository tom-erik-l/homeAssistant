# script:
#   incrementcounter:
#     description: 'Increment one of the counters used to control manual override of Circadian lights'
#     fields:
#       triggerlight:
#         description: 'Light that triggered'
#         example: '"light.stue"'
#       message:
#         description: 'The message content'
#         example: 'The light is on!'
#     sequence:
#       service: script.turn_on
#       data_template:
#         entity_id: >-
#           {% if states('sensor.aeotec_lounge_light_level') | float > 70 %}
#             script.lounge_rd_lights_off
#           {% elif 41 > states('sensor.aeotec_lounge_light_level') | float > 30 %}
#             script.lounge_rd_lights_25
#           {% elif 31 > states('sensor.aeotec_lounge_light_level') | float > 20 %}
#             script.lounge_rd_lights_50
#           {% elif 20 > states('sensor.aeotec_lounge_light_level') | float %}
#             script.lounge_rd_lights_75
#           {% else %}
#             script.noop
#           {% endif %}


#   noop:
#     sequence:
#       delay: 00:00:00


# - alias: "incrementStueCounter"
# # Increment the light counter if a light switches from off to on IF the boolean "disableincrement" == "off"
# initial_state: "on"
# trigger:
# - platform: state
#   entity_id: light.stue_spot
#   from: "off"
#   to: "on"
# condition:
# - condition: state
#   entity_id: input_boolean.disableincrement
#   state: "off"
# action:
# - service: counter.increment
#   entity_id: counter.stuecounter